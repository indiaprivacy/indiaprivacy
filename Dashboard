```index.tsx
import './index.css'
import React from "react";
import { render } from "react-dom";
import { App } from "./App";

render(<App />, document.getElementById("root"));

```
```App.tsx
import React from 'react'
import { TopBar } from './components/TopBar'
import { WelcomeSection } from './components/WelcomeSection'
import { ComplianceGrid } from './components/ComplianceGrid'
import { HelpCTA } from './components/HelpCTA'
export function App() {
  return (
    <div className="min-h-screen bg-gray-50">
      <TopBar businessName="TechCraft Solutions" />
      <main className="container mx-auto px-4 py-6 space-y-6 mb-16">
        <WelcomeSection businessName="TechCraft Solutions" progress={60} />
        <ComplianceGrid />
      </main>
      <HelpCTA />
    </div>
  )
}

```
```tailwind.config.js
export default {}
```
```index.css
@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';
```
```components/Sidebar.tsx
import React from 'react'
import {
  LayoutDashboardIcon,
  DatabaseIcon,
  ShieldAlertIcon,
  UsersIcon,
  SettingsIcon,
  HelpCircleIcon,
  ChevronLeftIcon,
  ChevronRightIcon,
  BarChartIcon,
  FileTextIcon,
} from 'lucide-react'
interface SidebarProps {
  collapsed: boolean
  setCollapsed: (collapsed: boolean) => void
}
export const Sidebar = ({ collapsed, setCollapsed }: SidebarProps) => {
  const menuItems = [
    {
      icon: LayoutDashboardIcon,
      label: 'Dashboard',
      active: true,
    },
    {
      icon: DatabaseIcon,
      label: 'Data Catalog',
    },
    {
      icon: ShieldAlertIcon,
      label: 'Compliance',
    },
    {
      icon: BarChartIcon,
      label: 'Analytics',
    },
    {
      icon: FileTextIcon,
      label: 'Reports',
    },
    {
      icon: UsersIcon,
      label: 'Users',
    },
    {
      icon: SettingsIcon,
      label: 'Settings',
    },
    {
      icon: HelpCircleIcon,
      label: 'Help',
    },
  ]
  return (
    <aside
      className={`bg-indigo-800 text-white transition-all duration-300 ${collapsed ? 'w-16' : 'w-64'} flex flex-col`}
    >
      <div className="flex items-center p-4 h-16">
        {!collapsed && <div className="font-bold text-xl">DataGuard</div>}
        <button
          onClick={() => setCollapsed(!collapsed)}
          className={`rounded p-1 hover:bg-indigo-700 ml-auto`}
        >
          {collapsed ? (
            <ChevronRightIcon size={18} />
          ) : (
            <ChevronLeftIcon size={18} />
          )}
        </button>
      </div>
      <nav className="flex-1 overflow-y-auto py-4">
        <ul>
          {menuItems.map((item, index) => (
            <li key={index}>
              <a
                href="#"
                className={`flex items-center py-3 px-4 ${item.active ? 'bg-indigo-700' : 'hover:bg-indigo-700'} transition-colors duration-200`}
              >
                <item.icon size={20} />
                {!collapsed && <span className="ml-4">{item.label}</span>}
              </a>
            </li>
          ))}
        </ul>
      </nav>
    </aside>
  )
}

```
```components/Navbar.tsx
import React from 'react'
import { BellIcon, SearchIcon, UserIcon } from 'lucide-react'
export const Navbar = () => {
  return (
    <header className="bg-white border-b border-gray-200 h-16 flex items-center px-6 sticky top-0 z-10">
      <div className="flex-1 flex items-center">
        <div className="relative w-64">
          <input
            type="text"
            placeholder="Search..."
            className="w-full pl-10 pr-4 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
          />
          <div className="absolute left-3 top-2.5 text-gray-400">
            <SearchIcon size={18} />
          </div>
        </div>
      </div>
      <div className="flex items-center space-x-4">
        <button className="relative p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded-full">
          <BellIcon size={20} />
          <span className="absolute top-1 right-1 w-2 h-2 bg-red-500 rounded-full"></span>
        </button>
        <div className="flex items-center space-x-2">
          <div className="w-8 h-8 bg-indigo-600 rounded-full flex items-center justify-center text-white">
            <UserIcon size={16} />
          </div>
          <span className="text-sm font-medium text-gray-700">Admin User</span>
        </div>
      </div>
    </header>
  )
}

```
```components/KPICards.tsx
import React from 'react'
import {
  DatabaseIcon,
  AlertTriangleIcon,
  ShieldIcon,
  TrendingUpIcon,
} from 'lucide-react'
export const KPICards = () => {
  const cards = [
    {
      title: 'Total Data Sources',
      value: '247',
      change: '+12%',
      positive: true,
      icon: DatabaseIcon,
      color: 'bg-blue-500',
    },
    {
      title: 'Sensitive Data',
      value: '1.8M',
      change: '+5%',
      positive: true,
      icon: ShieldIcon,
      color: 'bg-purple-500',
    },
    {
      title: 'Compliance Alerts',
      value: '24',
      change: '-8%',
      positive: true,
      icon: AlertTriangleIcon,
      color: 'bg-amber-500',
    },
    {
      title: 'Data Discovery Rate',
      value: '96%',
      change: '+2%',
      positive: true,
      icon: TrendingUpIcon,
      color: 'bg-green-500',
    },
  ]
  return (
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
      {cards.map((card, index) => (
        <div key={index} className="bg-white p-6 rounded-lg shadow">
          <div className="flex justify-between items-start">
            <div>
              <p className="text-sm font-medium text-gray-500">{card.title}</p>
              <p className="mt-2 text-3xl font-semibold text-gray-800">
                {card.value}
              </p>
            </div>
            <div className={`${card.color} p-3 rounded-lg text-white`}>
              <card.icon size={24} />
            </div>
          </div>
          <div className="mt-4 flex items-center">
            <span
              className={`text-sm ${card.positive ? 'text-green-600' : 'text-red-600'}`}
            >
              {card.change}
            </span>
            <span className="text-sm text-gray-500 ml-2">from last month</span>
          </div>
        </div>
      ))}
    </div>
  )
}

```
```components/DataDiscoveryChart.tsx
import React from 'react'
import {
  BarChart,
  Bar,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  ResponsiveContainer,
  Legend,
} from 'recharts'
export const DataDiscoveryChart = () => {
  const data = [
    {
      month: 'Jan',
      structured: 120,
      unstructured: 80,
    },
    {
      month: 'Feb',
      structured: 140,
      unstructured: 95,
    },
    {
      month: 'Mar',
      structured: 170,
      unstructured: 110,
    },
    {
      month: 'Apr',
      structured: 190,
      unstructured: 130,
    },
    {
      month: 'May',
      structured: 210,
      unstructured: 150,
    },
    {
      month: 'Jun',
      structured: 220,
      unstructured: 170,
    },
  ]
  return (
    <div className="w-full h-80">
      <ResponsiveContainer width="100%" height="100%">
        <BarChart
          data={data}
          margin={{
            top: 5,
            right: 30,
            left: 20,
            bottom: 5,
          }}
        >
          <CartesianGrid strokeDasharray="3 3" vertical={false} />
          <XAxis dataKey="month" />
          <YAxis />
          <Tooltip
            contentStyle={{
              backgroundColor: 'white',
              borderRadius: '0.375rem',
              border: '1px solid #e2e8f0',
              boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)',
            }}
          />
          <Legend />
          <Bar
            dataKey="structured"
            fill="#4f46e5"
            name="Structured Data"
            radius={[4, 4, 0, 0]}
          />
          <Bar
            dataKey="unstructured"
            fill="#a5b4fc"
            name="Unstructured Data"
            radius={[4, 4, 0, 0]}
          />
        </BarChart>
      </ResponsiveContainer>
    </div>
  )
}

```
```components/SensitiveDataChart.tsx
import React from 'react'
import {
  PieChart,
  Pie,
  Cell,
  ResponsiveContainer,
  Legend,
  Tooltip,
} from 'recharts'
export const SensitiveDataChart = () => {
  const data = [
    {
      name: 'PII',
      value: 35,
    },
    {
      name: 'Financial',
      value: 25,
    },
    {
      name: 'Health',
      value: 20,
    },
    {
      name: 'Intellectual Property',
      value: 15,
    },
    {
      name: 'Other',
      value: 5,
    },
  ]
  const COLORS = ['#4f46e5', '#8b5cf6', '#ec4899', '#f59e0b', '#6b7280']
  return (
    <div className="w-full h-80">
      <ResponsiveContainer width="100%" height="100%">
        <PieChart>
          <Pie
            data={data}
            cx="50%"
            cy="50%"
            innerRadius={70}
            outerRadius={100}
            fill="#8884d8"
            paddingAngle={2}
            dataKey="value"
            label={({ name, percent }) =>
              `${name} ${(percent * 100).toFixed(0)}%`
            }
          >
            {data.map((entry, index) => (
              <Cell
                key={`cell-${index}`}
                fill={COLORS[index % COLORS.length]}
              />
            ))}
          </Pie>
          <Tooltip
            formatter={(value) => [`${value}%`, 'Percentage']}
            contentStyle={{
              backgroundColor: 'white',
              borderRadius: '0.375rem',
              border: '1px solid #e2e8f0',
              boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)',
            }}
          />
          <Legend />
        </PieChart>
      </ResponsiveContainer>
    </div>
  )
}

```
```components/AlertsTable.tsx
import React from 'react'
import { AlertCircleIcon, AlertTriangleIcon, InfoIcon } from 'lucide-react'
export const AlertsTable = () => {
  const alerts = [
    {
      id: 1,
      title: 'Unauthorized access to customer database',
      source: 'CRM Database',
      time: '10 min ago',
      severity: 'high',
    },
    {
      id: 2,
      title: 'PII data found in unsecured storage',
      source: 'Cloud Storage',
      time: '1 hour ago',
      severity: 'high',
    },
    {
      id: 3,
      title: 'Unusual data access pattern detected',
      source: 'Financial Database',
      time: '3 hours ago',
      severity: 'medium',
    },
    {
      id: 4,
      title: 'Compliance policy violation',
      source: 'HR System',
      time: '5 hours ago',
      severity: 'medium',
    },
    {
      id: 5,
      title: 'New data source pending classification',
      source: 'Marketing Analytics',
      time: '1 day ago',
      severity: 'low',
    },
  ]
  const getSeverityIcon = (severity) => {
    switch (severity) {
      case 'high':
        return <AlertCircleIcon size={18} className="text-red-500" />
      case 'medium':
        return <AlertTriangleIcon size={18} className="text-amber-500" />
      case 'low':
        return <InfoIcon size={18} className="text-blue-500" />
      default:
        return null
    }
  }
  const getSeverityClass = (severity) => {
    switch (severity) {
      case 'high':
        return 'bg-red-100 text-red-800'
      case 'medium':
        return 'bg-amber-100 text-amber-800'
      case 'low':
        return 'bg-blue-100 text-blue-800'
      default:
        return 'bg-gray-100 text-gray-800'
    }
  }
  return (
    <div className="overflow-x-auto">
      <table className="min-w-full divide-y divide-gray-200">
        <thead className="bg-gray-50">
          <tr>
            <th
              scope="col"
              className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
            >
              Severity
            </th>
            <th
              scope="col"
              className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
            >
              Alert
            </th>
            <th
              scope="col"
              className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
            >
              Source
            </th>
            <th
              scope="col"
              className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
            >
              Time
            </th>
            <th
              scope="col"
              className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
            >
              Action
            </th>
          </tr>
        </thead>
        <tbody className="bg-white divide-y divide-gray-200">
          {alerts.map((alert) => (
            <tr key={alert.id} className="hover:bg-gray-50">
              <td className="px-6 py-4 whitespace-nowrap">
                <div className="flex items-center">
                  {getSeverityIcon(alert.severity)}
                  <span
                    className={`ml-2 px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getSeverityClass(alert.severity)}`}
                  >
                    {alert.severity.charAt(0).toUpperCase() +
                      alert.severity.slice(1)}
                  </span>
                </div>
              </td>
              <td className="px-6 py-4">
                <div className="text-sm font-medium text-gray-900">
                  {alert.title}
                </div>
              </td>
              <td className="px-6 py-4 whitespace-nowrap">
                <div className="text-sm text-gray-500">{alert.source}</div>
              </td>
              <td className="px-6 py-4 whitespace-nowrap">
                <div className="text-sm text-gray-500">{alert.time}</div>
              </td>
              <td className="px-6 py-4 whitespace-nowrap text-sm">
                <button className="text-indigo-600 hover:text-indigo-900 font-medium">
                  View
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  )
}

```
```components/TopBar.tsx
import React from 'react'
import { HelpCircleIcon, MessageCircleIcon } from 'lucide-react'
interface TopBarProps {
  businessName: string
}
export const TopBar = ({ businessName }: TopBarProps) => {
  return (
    <header className="bg-white border-b border-gray-200 sticky top-0 z-50">
      <div className="container mx-auto px-4">
        <div className="h-16 flex items-center justify-between">
          <div className="flex items-center">
            {/* Logo */}
            <div className="text-indigo-600 font-bold text-xl">
              PrivacyShield
            </div>
          </div>
          {/* Business name - centered */}
          <div className="hidden md:block text-gray-600 font-medium">
            {businessName}
          </div>
          {/* Right actions */}
          <div className="flex items-center space-x-4">
            <button className="p-2 text-gray-600 hover:bg-gray-100 rounded-lg transition-colors duration-150">
              <HelpCircleIcon size={20} />
            </button>
            <button className="flex items-center space-x-2 bg-indigo-50 text-indigo-600 px-3 py-2 rounded-lg hover:bg-indigo-100 transition-colors duration-150">
              <MessageCircleIcon size={18} />
              <span className="hidden sm:inline font-medium">
                Chat with DPO
              </span>
            </button>
          </div>
        </div>
      </div>
    </header>
  )
}

```
```components/WelcomeSection.tsx
import React from 'react'
interface WelcomeSectionProps {
  businessName: string
  progress: number
}
export const WelcomeSection = ({
  businessName,
  progress,
}: WelcomeSectionProps) => {
  return (
    <section className="bg-white rounded-xl shadow-sm p-6">
      <div className="space-y-4">
        <div>
          <h1 className="text-2xl font-semibold text-gray-800">
            Welcome back, {businessName}
          </h1>
          <p className="text-gray-600 mt-1">
            You're {progress}% compliant with DPDP
          </p>
        </div>
        {/* Progress bar */}
        <div className="space-y-2">
          <div className="h-4 bg-gray-100 rounded-full overflow-hidden">
            <div
              className="h-full bg-indigo-600 transition-all duration-500 ease-out"
              style={{
                width: `${progress}%`,
              }}
            />
          </div>
          <div className="flex justify-between text-sm text-gray-500">
            <span>Progress</span>
            <span>{progress}%</span>
          </div>
        </div>
      </div>
    </section>
  )
}

```
```components/ComplianceCard.tsx
import React, { Component } from 'react'
import { BoxIcon } from 'lucide-react'
interface ComplianceCardProps {
  title: string
  description: string
  status: 'completed' | 'warning' | 'in-progress' | 'pending'
  icon: BoxIcon
  action: {
    label: string
    onClick: () => void
  }
}
export const ComplianceCard = ({
  title,
  description,
  status,
  icon: IconComponent,
  action,
}: ComplianceCardProps) => {
  const getStatusConfig = (status: string) => {
    switch (status) {
      case 'completed':
        return {
          icon: '✔️',
          bgColor: 'bg-green-50',
          textColor: 'text-green-700',
          borderColor: 'border-green-200',
        }
      case 'warning':
        return {
          icon: '⚠️',
          bgColor: 'bg-amber-50',
          textColor: 'text-amber-700',
          borderColor: 'border-amber-200',
        }
      case 'in-progress':
        return {
          icon: '⏳',
          bgColor: 'bg-blue-50',
          textColor: 'text-blue-700',
          borderColor: 'border-blue-200',
        }
      default:
        return {
          icon: '📄',
          bgColor: 'bg-gray-50',
          textColor: 'text-gray-700',
          borderColor: 'border-gray-200',
        }
    }
  }
  const statusConfig = getStatusConfig(status)
  return (
    <div
      className={`rounded-xl border ${statusConfig.borderColor} bg-white p-6 shadow-sm hover:shadow-md transition-shadow duration-200`}
    >
      <div className="space-y-4">
        {/* Header */}
        <div className="flex justify-between items-start">
          <div className={`p-2 ${statusConfig.bgColor} rounded-lg`}>
            <IconComponent className={`w-5 h-5 ${statusConfig.textColor}`} />
          </div>
          <span className="text-lg">{statusConfig.icon}</span>
        </div>
        {/* Content */}
        <div>
          <h3 className="font-medium text-gray-900">{title}</h3>
          <p className="mt-1 text-sm text-gray-500">{description}</p>
        </div>
        {/* Action */}
        <button
          onClick={action.onClick}
          className="w-full px-4 py-2 text-sm font-medium rounded-lg bg-white border border-gray-300 text-gray-700 hover:bg-gray-50 transition-colors duration-150"
        >
          {action.label}
        </button>
      </div>
    </div>
  )
}

```
```components/ComplianceGrid.tsx
import React from 'react'
import { ComplianceCard } from './ComplianceCard'
import {
  FileTextIcon,
  ToggleLeftIcon,
  SearchIcon,
  UserIcon,
  ShieldAlertIcon,
  PhoneIcon,
} from 'lucide-react'
export const ComplianceGrid = () => {
  const modules = [
    {
      title: 'Privacy Policy',
      description: 'Your policy is up to date with DPDP requirements',
      status: 'completed' as const,
      icon: FileTextIcon,
      action: {
        label: 'View/Edit Policy',
        onClick: () => console.log('View/Edit Policy'),
      },
    },
    {
      title: 'Consent Manager',
      description: 'Action needed: Set up consent collection forms',
      status: 'warning' as const,
      icon: ToggleLeftIcon,
      action: {
        label: 'Set up now',
        onClick: () => console.log('Set up Consent Manager'),
      },
    },
    {
      title: 'Data Discovery',
      description: 'Scanning 3 databases... 65% complete',
      status: 'in-progress' as const,
      icon: SearchIcon,
      action: {
        label: 'View Progress',
        onClick: () => console.log('View Data Discovery'),
      },
    },
    {
      title: 'DSR Portal',
      description: '2 pending subject requests',
      status: 'warning' as const,
      icon: UserIcon,
      action: {
        label: 'Handle Requests',
        onClick: () => console.log('Handle DSR'),
      },
    },
    {
      title: 'Risk & Alerts',
      description: '3 potential vulnerabilities detected',
      status: 'warning' as const,
      icon: ShieldAlertIcon,
      action: {
        label: 'Review Alerts',
        onClick: () => console.log('Review Alerts'),
      },
    },
    {
      title: 'Grievances',
      description: 'No active grievances',
      status: 'completed' as const,
      icon: PhoneIcon,
      action: {
        label: 'Open Portal',
        onClick: () => console.log('Open Grievances'),
      },
    },
  ]
  return (
    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
      {modules.map((module, index) => (
        <ComplianceCard key={index} {...module} />
      ))}
    </div>
  )
}

```
```components/HelpCTA.tsx
import React from 'react'
import { MessageCircleIcon } from 'lucide-react'
export const HelpCTA = () => {
  return (
    <div className="fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 p-4">
      <div className="container mx-auto">
        <button
          className="w-full sm:w-auto flex items-center justify-center space-x-2 bg-indigo-600 text-white px-6 py-3 rounded-lg hover:bg-indigo-700 transition-colors duration-150 shadow-sm"
          onClick={() => console.log('Open DPO chat')}
        >
          <MessageCircleIcon size={20} />
          <span>Need help staying compliant? Ask a DPO 💬</span>
        </button>
      </div>
    </div>
  )
}

```
